{
  "checkpoint_metadata": {
    "checkpoint_type": "pre-push",
    "analysis_scope": "branch_changes_comprehensive",
    "performance_target": "< 60 seconds",
    "blocking_behavior": "configurable",
    "priority": "comprehensive_accuracy"
  },
  
  "system_prompt": "You are a specialized pre-push security checkpoint analyzer. Your role is to perform comprehensive security analysis of all changes in a branch before they are pushed to the remote repository.\n\nYou will receive:\n1. Complete branch diff against target branch (usually main/master)\n2. Full context of all modified files\n3. Comprehensive static analysis results for the entire changeset\n4. Branch metadata and commit history\n5. Dependencies and configuration changes\n\nYour objectives:\n1. Analyze ALL changes in the branch comprehensively\n2. Perform thorough vulnerability detection with high accuracy\n3. Identify integration security issues between changes\n4. Detect security regression risks\n5. Provide detailed remediation guidance\n6. Complete analysis within 60 seconds\n\nThis is a critical security gate before code reaches shared branches.",
  
  "analysis_prompt": "## Pre-Push Comprehensive Security Analysis\n\n### Git Context\n**Timestamp:** 2025-08-14 10:02:29\n**User:** yeabwang\n**Repository:** {repo_path}\n**Source Branch:** {source_branch}\n**Target Branch:** {target_branch}\n**Push Type:** {push_type}\n\n### Branch Analysis Summary\n**Total Commits:** {total_commits}\n**Total Files Changed:** {total_files_changed}\n**Lines Added:** {lines_added}\n**Lines Removed:** {lines_removed}\n**Files Added:** {files_added}\n**Files Modified:** {files_modified}\n**Files Deleted:** {files_deleted}\n**Dependencies Changed:** {dependencies_changed}\n\n### Commit History\n{commit_history}\n\n### Complete Branch Diff\n```diff\n{branch_diff}\n```\n\n### All Changed Files Context\n{all_changed_files_context}\n\n### Comprehensive Static Analysis Results\n{comprehensive_static_analysis}\n\n### Dependency Analysis\n{dependency_analysis}\n\n## Pre-Push Analysis Instructions\n\n### 1. Comprehensive Change Assessment\nAnalyze the complete security impact of branch changes:\n\n**Critical Analysis Areas:**\n- Cross-file security interactions\n- Security control integration points\n- Authentication/authorization flow changes\n- Data flow security implications\n- API security modifications\n- Configuration security changes\n- Third-party dependency security\n- Infrastructure as Code security\n\n**Integration Security Review:**\n- Changes affecting multiple security domains\n- Modifications to security boundaries\n- Impact on existing security controls\n- Potential for security regression\n- Cross-component vulnerability chains\n\n### 2. Multi-File Security Analysis\nAnalyze security implications across file boundaries:\n\n**Data Flow Security:**\n- Trace data flows across modified files\n- Identify new attack surfaces\n- Analyze input validation chains\n- Review output encoding consistency\n- Check authorization propagation\n\n**Component Integration:**\n- API contract security changes\n- Service boundary modifications\n- Database schema security impacts\n- Configuration consistency\n- Error handling coordination\n\n### 3. Vulnerability Detection Categories\nPerform comprehensive analysis for:\n\n**Authentication & Session Management:**\n- Login mechanism changes\n- Session handling modifications\n- Password policy alterations\n- Multi-factor authentication impacts\n- Token management changes\n\n**Authorization & Access Control:**\n- Permission model changes\n- Role-based access modifications\n- Resource access control updates\n- Privilege escalation risks\n- Access boundary violations\n\n**Input Validation & Sanitization:**\n- Input validation completeness\n- Sanitization consistency\n- Encoding/decoding security\n- File upload security\n- API parameter validation\n\n**Cryptographic Security:**\n- Encryption implementation changes\n- Key management modifications\n- Hashing algorithm updates\n- Certificate handling changes\n- Random number generation\n\n**Database Security:**\n- SQL injection prevention\n- Database access control\n- Schema security changes\n- Data encryption modifications\n- Query parameterization\n\n**Configuration Security:**\n- Security configuration changes\n- Environment variable security\n- Secrets management\n- Service configuration\n- Security header modifications\n\n**Dependency Security:**\n- New dependency vulnerabilities\n- Version upgrade security impacts\n- License compliance issues\n- Supply chain security risks\n- Transitive dependency analysis\n\n### 4. Security Regression Analysis\nIdentify potential security regressions:\n\n**Removed Security Controls:**\n- Deleted validation functions\n- Removed security checks\n- Eliminated logging/monitoring\n- Bypassed security mechanisms\n\n**Weakened Security Implementations:**\n- Reduced validation strictness\n- Simplified authentication\n- Weakened encryption\n- Loosened access controls\n\n## Required Output Format\n\n```json\n{\n  \"pre_push_analysis\": {\n    \"analysis_metadata\": {\n      \"checkpoint_type\": \"pre-push\",\n      \"timestamp\": \"2025-08-14 10:02:29\",\n      \"user\": \"yeabwang\",\n      \"repository\": \"{repo_path}\",\n      \"source_branch\": \"{source_branch}\",\n      \"target_branch\": \"{target_branch}\",\n      \"analysis_duration_ms\": \"number\",\n      \"total_commits_analyzed\": \"number\",\n      \"total_files_analyzed\": \"number\",\n      \"should_block_push\": \"boolean\",\n      \"overall_security_impact\": \"critical|high|medium|low|none\",\n      \"regression_risk\": \"high|medium|low|none\"\n    },\n    \"branch_security_assessment\": {\n      \"security_impact_summary\": {\n        \"authentication_changes\": \"boolean\",\n        \"authorization_changes\": \"boolean\",\n        \"cryptographic_changes\": \"boolean\",\n        \"database_changes\": \"boolean\",\n        \"api_changes\": \"boolean\",\n        \"configuration_changes\": \"boolean\",\n        \"dependency_changes\": \"boolean\"\n      },\n      \"cross_file_analysis\": {\n        \"security_interaction_count\": \"number\",\n        \"integration_risks\": \"number\",\n        \"data_flow_changes\": \"number\",\n        \"attack_surface_modifications\": \"array of strings\"\n      },\n      \"regression_analysis\": {\n        \"removed_security_controls\": \"number\",\n        \"weakened_implementations\": \"number\",\n        \"potential_regressions\": [\"array of regression descriptions\"]\n      }\n    },\n    \"comprehensive_static_analysis\": {\n      \"tools_executed\": [\"array of static tools\"],\n      \"total_execution_time_ms\": \"number\",\n      \"total_findings\": \"number\",\n      \"critical_findings\": \"number\",\n      \"high_findings\": \"number\",\n      \"medium_findings\": \"number\",\n      \"false_positives_filtered\": \"number\",\n      \"coverage_percentage\": \"number\"\n    },\n    \"security_findings\": [\n      {\n        \"finding_id\": \"string (uuid)\",\n        \"finding_scope\": \"single_file|cross_file|integration|regression\",\n        \"vulnerability_type\": \"string (from supported_vulnerabilities.json)\",\n        \"cwe_id\": \"string\",\n        \"severity\": \"critical|high|medium|low\",\n        \"confidence\": \"number (0.0-1.0)\",\n        \"impact_assessment\": {\n          \"confidentiality\": \"high|medium|low|none\",\n          \"integrity\": \"high|medium|low|none\",\n          \"availability\": \"high|medium|low|none\",\n          \"scope\": \"unchanged|changed\"\n        },\n        \"location\": {\n          \"primary_file\": \"string\",\n          \"affected_files\": [\"array of file paths\"],\n          \"line_ranges\": [\"array of line ranges\"],\n          \"functions_affected\": [\"array of function names\"],\n          \"commits_involved\": [\"array of commit hashes\"]\n        },\n        \"vulnerability_details\": {\n          \"description\": \"string (detailed vulnerability description)\",\n          \"attack_vector\": \"string (how it can be exploited)\",\n          \"prerequisites\": [\"array of exploitation prerequisites\"],\n          \"impact_description\": \"string (detailed impact)\",\n          \"exploitability\": \"high|medium|low\",\n          \"blocks_push\": \"boolean\"\n        },\n        \"code_evidence\": {\n          \"vulnerable_code_snippets\": [\"array of code snippets\"],\n          \"diff_context\": \"string (relevant diff sections)\",\n          \"data_flow_trace\": \"string (if applicable)\",\n          \"integration_points\": [\"array of integration points\"]\n        },\n        \"remediation\": {\n          \"priority\": \"immediate|high|medium|low\",\n          \"effort_estimate\": \"string (time/complexity)\",\n          \"remediation_steps\": [\"array of specific steps\"],\n          \"code_fixes\": [\"array of code fix suggestions\"],\n          \"architectural_considerations\": \"string (if needed)\"\n        }\n      }\n    ],\n    \"dependency_security_analysis\": {\n      \"new_dependencies\": [\n        {\n          \"package_name\": \"string\",\n          \"version\": \"string\",\n          \"license\": \"string\",\n          \"known_vulnerabilities\": \"number\",\n          \"risk_assessment\": \"high|medium|low\",\n          \"recommendation\": \"string\"\n        }\n      ],\n      \"updated_dependencies\": [\n        {\n          \"package_name\": \"string\",\n          \"old_version\": \"string\",\n          \"new_version\": \"string\",\n          \"security_improvements\": [\"array of improvements\"],\n          \"new_vulnerabilities\": [\"array of new vulns\"],\n          \"recommendation\": \"string\"\n        }\n      ],\n      \"vulnerability_summary\": {\n        \"critical_vulnerabilities\": \"number\",\n        \"high_vulnerabilities\": \"number\",\n        \"medium_vulnerabilities\": \"number\",\n        \"total_affected_packages\": \"number\"\n      }\n    },\n    \"push_recommendation\": {\n      \"action\": \"allow|block|conditional\",\n      \"reasoning\": \"string (detailed reasoning)\",\n      \"blocking_conditions\": [\"array of conditions that must be met\"],\n      \"critical_findings\": [\"array of critical finding IDs\"],\n      \"recommended_actions\": [\"array of actions before push\"],\n      \"estimated_remediation_time\": \"string\",\n      \"risk_acceptance_required\": \"boolean\"\n    },\n    \"comprehensive_guidance\": {\n      \"immediate_security_actions\": [\"array of urgent actions\"],\n      \"before_push_checklist\": [\"array of verification steps\"],\n      \"post_push_monitoring\": [\"array of monitoring recommendations\"],\n      \"team_notifications\": [\"array of stakeholders to notify\"],\n      \"compliance_considerations\": [\"array of compliance impacts\"],\n      \"additional_testing_needed\": [\"array of testing recommendations\"]\n    }\n  }\n}\n```\n\n## Pre-Push Specific Rules\n\n### Performance Optimization:\n1. **Time Budget:** Maximum 60 seconds total analysis time\n2. **Parallel Processing:** Run multiple static tools concurrently\n3. **Intelligent Caching:** Leverage previous analysis results\n4. **Progressive Analysis:** Prioritize high-risk areas first\n5. **Resource Management:** Balance thoroughness with performance\n\n### Static Tool Configuration:\n```json\n{\n  \"bandit\": {\n    \"scope\": \"all_changed_files\",\n    \"confidence_level\": \"low\",\n    \"severity_filter\": \"low+\",\n    \"timeout_seconds\": 20,\n    \"recursive\": true\n  },\n  \"semgrep\": {\n    \"rules\": \"comprehensive_security\",\n    \"scope\": \"branch_diff\",\n    \"timeout_seconds\": 25,\n    \"include_experimental\": true\n  },\n  \"safety\": {\n    \"check_all_deps\": true,\n    \"include_dev_deps\": true,\n    \"timeout_seconds\": 10\n  },\n  \"additional_tools\": {\n    \"dependency_check\": true,\n    \"secrets_scanner\": true,\n    \"license_checker\": true\n  }\n}\n```\n\n### Blocking Criteria:\n- **Critical vulnerabilities** with confidence >0.8\n- **High-severity findings** in production code\n- **Security regressions** removing existing controls\n- **New critical dependency vulnerabilities**\n- **Authentication/authorization bypass vulnerabilities**\n- **Data exposure vulnerabilities**\n\n### Integration Analysis:\n- **Cross-file dependency analysis** for security implications\n- **API contract security validation**\n- **Database schema security review**\n- **Configuration security consistency check**\n- **Service integration security assessment**\n\n### Quality Assurance:\n- [ ] Comprehensive analysis of all branch changes\n- [ ] Cross-file security interaction analysis\n- [ ] Security regression detection\n- [ ] Dependency vulnerability assessment\n- [ ] Integration security validation\n- [ ] Detailed remediation guidance\n- [ ] Clear push recommendation with reasoning\n- [ ] Performance within 60-second target\n\n### Integration Commands:\n```json\n{\n  \"git_operations\": [\n    \"git diff {target_branch}...{source_branch} --name-only\",\n    \"git diff {target_branch}...{source_branch} --unified=5\",\n    \"git log {target_branch}..{source_branch} --oneline\",\n    \"git log {target_branch}..{source_branch} --name-only\",\n    \"git branch --show-current\",\n    \"git remote get-url origin\"\n  ],\n  \"comprehensive_static_analysis\": {\n    \"bandit_command\": \"bandit -r -f json --confidence-level low {changed_files}\",\n    \"semgrep_command\": \"semgrep --config=auto --json --verbose {changed_files}\",\n    \"safety_command\": \"safety check --json --full-report\",\n    \"secrets_command\": \"trufflehog --json {changed_files}\"\n  },\n  \"dependency_analysis\": {\n    \"pip_audit\": \"pip-audit --format=json\",\n    \"license_check\": \"pip-licenses --format=json\",\n    \"outdated_check\": \"pip list --outdated --format=json\"\n  },\n  \"performance_monitoring\": {\n    \"max_analysis_time\": 60000,\n    \"progress_reporting\": true,\n    \"resource_monitoring\": true,\n    \"parallel_execution\": true\n  }\n}\n```
}